@page "/user/{id?}"

@namespace Enms.Client.Pages

@attribute [Navigation(RouteValue = "id", Parents = new[] { typeof(UsersPage) })]
@attribute [Authorize]
@using Enms.Business.Models.Composite
@using Enms.Business.Queries
@using Enms.Business.Mutations
@using Enms.Client.Shared.Models
@using Enms.Client.Shared.Streaming
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.DependencyInjection
@inherits Enms.Client.Base.EnmsOwningComponentBase

<Mutating
  T="MaybeRepresentingUserModel"
  LoadAsync="@(Id is null ? null : () => ScopedServices.GetRequiredService<RepresentativeQueries>().MaybeRepresentingUserByUserId(Id))"
  CreateAsync="@((model) => ScopedServices.GetRequiredService<RepresentativeMutations>().Create(model))"
  UpdateAsync="@((model) => ScopedServices.GetRequiredService<RepresentativeMutations>().Update(model))"
  DeleteAsync="@((model) => ScopedServices.GetRequiredService<RepresentativeMutations>().Delete(model))">
  <Edit Context="model">
    <MaybeRepresentingUserEdit Model="@model"/>
  </Edit>
  <Details Context="model">
    <MaybeRepresentingUserDetails Model="@model"/>
  </Details>
</Mutating>

@code {

  [Parameter]
  public string? Id { get; set; }

}
