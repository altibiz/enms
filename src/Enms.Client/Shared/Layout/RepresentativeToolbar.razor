@namespace Enms.Client.Shared.Layout
@using Enms.Business.Models.Joins
@using MudBlazor
@using Enms.Client.Base
@using Enms.Client.State
@using Enms.Client.Shared.Streaming
@using Enms.Business.Queries
@using Enms.Business.Models.Base
@using Enms.Business.Models
@using Microsoft.Extensions.DependencyInjection
@inherits EnmsOwningComponentBase

<MudToolBar Gutters="false">
  <MudContainer
    Style="height: 100%;"
    MaxWidth="MaxWidth.Large"
    Class="d-flex flex-row">
    <MudIconButton
      Icon="@Icons.Material.Outlined.Menu"
      Style="margin-left: -12px;"
      OnClick="e => LayoutState.SetNavigationDrawerOpen(true)"/>
    <MudSpacer />
    @if (UserState.User.MaybeRepresentative
      is RepresentativeModel representative)
    {
      <Paging PageAsync="@((page) => ScopedServices
        .GetRequiredService<NotificationQueries>()
        .Read(representative.Id, pageNumber: page))">
        <Found Context="events">
          <MudButton
            Size="Size.Small"
            Style="margin-right: -20px;"
            Href="@($"/app/{Culture}/notifications")">
            <MudIcon Icon="@Icons.Material.Filled.NotificationsActive"/>
            <MudItem>
              <MudIcon Icon="@Icons.Material.Filled.Circle"/>
              <MudText>@events.TotalCount</MudText>
            </MudItem>
          </MudButton>
        </Found>
        <Empty>
          <MudButton
            Size="Size.Small"
            Style="margin-right: -20px;"
            Href="@($"/app/{Culture}/notifications")">
            <MudIcon Icon="@Icons.Material.Filled.NotificationsNone" />
          </MudButton>
        </Empty>
        <Pagination />
      </Paging>
    }
  </MudContainer>
</MudToolBar>

@code {
  [CascadingParameter]
  public LayoutState LayoutState { get; set; } = default!;

  [CascadingParameter]
  public UserState UserState { get; set; } = default!;
}
