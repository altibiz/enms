@namespace Enms.Client.Shared.Layout
@using System.Globalization
@using Enms.Business.Queries.Agnostic
@using Enms.Business.Models.Base
@using Enms.Client.State
@using Enms.Client.Shared.Streaming
@using Microsoft.AspNetCore.Antiforgery
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.DependencyInjection
@using MudBlazor
@inherits Enms.Client.Base.EnmsOwningLayoutComponentBase
@inject IAntiforgery Antiforgery
@inject IHttpContextAccessor HttpContextAccessor

<MudLayout>
  <MudAppBar Elevation="0">
    <MudIconButton
      Icon="@Icons.Material.Outlined.Menu"
      Edge="Edge.Start"
      OnClick="e => _drawerOpen = !_drawerOpen"/>
    <MudSpacer />
    <Paging PageAsync="@((page) => ScopedServices
      .GetRequiredService<AgnosticQueries>()
      .Read<EventModel>(pageNumber: page))">
      <Found Context="events">
        <MudMenu>
          <ActivatorContent>
            <MudIcon Icon="@Icons.Material.Filled.NotificationsActive"/>
            <MudItem class="d-flex">
              <MudIcon Icon="@Icons.Material.Filled.Circle"/>
              <MudText>@events.TotalCount</MudText>
            </MudItem>
          </ActivatorContent>
          <ChildContent>
            <MudList T="EventModel">
              @foreach(var e in events.Items) {
                <MudListItem
                  Text="@e.Title"
                  Icon="@Icons.Material.Filled.Circle"
                  IconColor="@MudBlazor.Color.Error"
                  Href="@($"event/{e.Id}")"
                  ForceLoad="true"/>
                <hr />
              }
            </MudList>
          </ChildContent>
        </MudMenu>
      </Found>
      <Empty>
        <MudMenu>
          <ActivatorContent>
            <MudIcon Icon="@Icons.Material.Filled.NotificationsNone"/>
          </ActivatorContent>
        </MudMenu>
      </Empty>
      <Pagination />
    </Paging>
  </MudAppBar>
  <MudDrawer
    @bind-Open="_drawerOpen"
    ClipMode="DrawerClipMode.Never"
    Elevation="0"
    Anchor="Anchor.Top"
    Variant="DrawerVariant.Temporary"
    Height="100vh">
    <MudDrawerHeader>
      <MudImage
        Src="/favicon.svg"
        Alt="HelbEx"
        Style="height: calc(var(--mud-appbar-height) - 24px);"/>
    </MudDrawerHeader>
    <MudDrawerContainer>
      <MudNavMenu>
        @foreach (var route in GetNavigationDescriptors())
        {
          <MudNavLink Href="@route.Route" Icon="@route.Icon" Match="NavLinkMatch.All">
            @Translate(route.Title)
          </MudNavLink>
        }
      </MudNavMenu>
    </MudDrawerContainer>
  </MudDrawer>
  <MudMainContent>
    <MudContainer>
      @Body
    </MudContainer>
  </MudMainContent>
</MudLayout>

@code {

  [CascadingParameter]
  public RepresentativeState RepresentativeState { get; set; } = default!;

  private bool _drawerOpen = true;
}
