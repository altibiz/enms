@namespace Enms.Client.Shared.Layout
@using System.Globalization
@using Enms.Client.State
@using Microsoft.AspNetCore.Components.Routing
@using MudBlazor
@inherits Enms.Client.Base.EnmsLayoutComponentBase

<MudLayout>
  <MudAppBar Elevation="4">
    <MudHidden Breakpoint="Breakpoint.MdAndUp">
      <MudIconButton
        Icon="@Icons.Material.Outlined.Menu"
        Color="Color.Inherit"
        Edge="Edge.Start"
        OnClick="e => _drawerOpen = !_drawerOpen"/>
    </MudHidden>
    <MudHidden Breakpoint="Breakpoint.Xs">
      <MudImage
        @onclick="@(() => Home())"
        Src="/logo.svg"
        Alt="HelbEx"
        Style="height: 50%;padding-left: 20px;"/>
    </MudHidden>
    <MudSpacer/>
    <MudMenu AnchorOrigin="Origin.CenterLeft" Dense="true" Class="mt-1 ml-4">
      <ActivatorContent>
        <MudButton Variant="Variant.Outlined" Class="mx-2" Style="color: white; border-color: white;">
          @Culture.TwoLetterISOLanguageName.ToUpper()
        </MudButton>
      </ActivatorContent>
      <ChildContent>
        <MudListItem Text="HR" OnClick="@(e => Culture = new CultureInfo("hr-HR"))"/>
        <MudListItem Text="EN" OnClick="@(e => Culture = new CultureInfo("en-US"))"/>
      </ChildContent>
    </MudMenu>
  </MudAppBar>
  <MudDrawer @bind-Open="_drawerOpen" Elevation="25" ClipMode="DrawerClipMode.Always">
    <MudNavMenu>
      @foreach (var route in GetNavigationDescriptors())
      {
        <MudNavLink Href="@route.Route" Match="NavLinkMatch.All">
          @Translate(route.Title)
        </MudNavLink>
      }
    </MudNavMenu>
  </MudDrawer>
  <MudMainContent>
    <MudHidden Breakpoint="Breakpoint.SmAndDown">
      <MudToolBar DisableGutters="true">
        <MudIconButton
          Icon="@Icons.Material.Outlined.Menu"
          Color="Color.Inherit"
          OnClick="e => _drawerOpen = !_drawerOpen"
          Class="ml-3"/>
      </MudToolBar>
    </MudHidden>
    <MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
      @Body
    </MudContainer>
  </MudMainContent>
</MudLayout>

@code {

  [CascadingParameter]
  public UserState? UserState { get; set; } = default!;

  public bool _drawerOpen = true;
}
