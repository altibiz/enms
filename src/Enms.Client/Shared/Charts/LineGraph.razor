@namespace Enms.Client.Shared.Charts
@using ApexCharts
@using Enms.Business.Models
@using Enms.Business.Models.Abstractions
@using Enms.Business.Models.Enums
@using Enms.Client.Shared.Fields
@using MudBlazor
@inherits Enms.Client.Base.EnmsOwningComponentBase

<div class="d-flex justify-center">
  <MudText>
    @Translate(Measure.ToTitle())
    (@Translate(Measure.ToUnit()))
    over the last
    @(Multiplier == 1 ? "" : Multiplier.ToString())
    @Translate(Resolution.ToTitle(Multiplier))
  </MudText>
</div>

<ApexChart XAxisType="XAxisType.Datetime"
           Options="@_options"
           @ref="_chart">
  @foreach (var phase in Phases)
  {
    @if (Lines.Count > 1)
    {
      @foreach (var selectedLine in _selectedLines)
      {
        <ApexPointSeries
          Items="@(_measurements.Items.Where(x => x.LineId == selectedLine.Id))"
          Name="@(phase.ToTitle())"
          SeriesType="SeriesType.Line"
          XValue='x => DateTimeChart(x.Timestamp)'
          YValue="x => x.ChartValue(Measure, phase)"
          Stroke="@(new SeriesStroke { Color = phase.ToColor(), Width = 4 })"/>
      }
    }
    else
    {
      <ApexPointSeries
        Items="@(_measurements.Items)"
        Name="@(phase.ToTitle())"
        SeriesType="SeriesType.Line"
        XValue='x => DateTimeChart(x.Timestamp)'
        YValue="x => x.ChartValue(Measure, phase)"
        Stroke="@(new SeriesStroke { Color = phase.ToColor(), Width = 4 })"/>
    }
  }
</ApexChart>

<style>
  #graph-controls > .mud-expand-panel-header {
    padding: 0px !important;
  }
</style>

<MudExpansionPanel
  id="graph-controls"
  Gutters="false"
  Text="@Translate("Graph controls")">
  <MudGrid Spacing="2" Justify="Justify.Center">
    <MudItem xs="10" md="6">
      @if (Lines.Count > 1)
      {
        <MudSelect
          T="ILine"
          Label="@Translate("Lines")"
          SelectedValues="_selectedLines"
          SelectedValuesChanged="e => _selectedLines = e.ToHashSet()"
          MultiSelection>
          @foreach (var line in Lines)
          {
            <MudSelectItem Value="@line">
              @line.Id
            </MudSelectItem>
          }
        </MudSelect>
      }
    </MudItem>
    <MudItem xs="2" md="6">
      <MudHidden Breakpoint="Breakpoint.MdAndUp">
        <MudCheckBox
          T="bool"
          @bind-Value="Refresh"
          Label="@Translate("Refresh")"/>
      </MudHidden>
      <MudHidden Breakpoint="Breakpoint.SmAndDown">
        <div class="d-flex justify-end pe-4">
          <MudCheckBox
            T="bool"
            @bind-Value="Refresh"
            Label="@Translate("Refresh")"/>
        </div>
      </MudHidden>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
      <EnumPicker
        T="MeasureModel"
        @bind-Value="Measure"
        Title="@Translate("Measure")"
        Label="x => Translate(x.ToTitle())"/>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
      <MultiEnumPicker
        T="PhaseModel"
        @bind-Value="Phases"
        Title="@Translate("Phase")"
        Label="x => Translate(x.ToTitle())"/>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
      <EnumPicker
        T="ResolutionModel"
        @bind-Value="Resolution"
        Title="@Translate("Resolution")"
        Label="x => Translate(x.ToTitle(Multiplier))"/>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
      <MudNumericField
        T="int"
        @bind-Value="Multiplier"
        Label="@Translate("Multiplier")"
        Min="1"
        Max="@Resolution.MaxMultiplier()"
        Step="1"/>
    </MudItem>
  </MudGrid>
</MudExpansionPanel>
